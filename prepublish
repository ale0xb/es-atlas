#!/bin/bash

# Simplification
SP=0.0001

# Quantization
QU=1e4

rm -rvf es
mkdir -p build es

curl -o build/lineas_limite.zip -C - 'http://centrodedescargas.cnig.es/CentroDescargas/equipamiento/lineas_limite.zip'
unzip -jod build build/lineas_limite.zip recintos_municipales* recintos_provinciales*

geo2topo -n provinces=<( \
    shp2json --encoding utf8 -n build/recintos_provinciales_inspire_peninbal_etrs89.shp \
      | ndjson-map '(d.id = d.properties.NATCODE.slice(4, 6), d)'
    shp2json --encoding utf8 -n build/recintos_provinciales_inspire_canarias_wgs84.shp \
      | ndjson-map '(d.id = d.properties.NATCODE.slice(4, 6), d)') \
  | toposimplify -f -p $SP \
  | topomerge autonomous_regions=provinces -k 'd.properties.NATCODE.slice(2, 4)' \
  | topomerge nation=autonomous_regions \
  > es/es_provinces.json

geo2topo -n municipalities=<( \
    shp2json --encoding utf8 -n build/recintos_municipales_inspire_peninbal_etrs89.shp \
      | ndjson-map '(d.id = d.properties.NATCODE.slice(6, 11), d)'
    shp2json --encoding utf8 -n build/recintos_municipales_inspire_canarias_wgs84.shp \
      | ndjson-map '(d.id = d.properties.NATCODE.slice(6, 11), d)') \
  | toposimplify -f -p $SP \
  | topomerge provinces=municipalities -k 'd.properties.NATCODE.slice(4, 6)' \
  | topomerge autonomous_regions=municipalities -k 'd.properties.NATCODE.slice(2, 4)' \
  | topomerge nation=autonomous_regions \
  > es/es_municipalities.json

# Inspired by: https://bl.ocks.org/mbostock/39b34968ad5eab65de1d7da81f78bb27
# Re-compute the topology as a further optimization.
# This consolidates unique sequences of arcs.
# https://github.com/topojson/topojson-simplify/issues/4
topo2geo -n \
  < es/es_provinces.json \
  provinces=es/provinces.json \
  autonomous_regions=es/autonomous_regions.json \
  nation=es/nation.json

geo2topo -n \
  provinces=<( \
      cat es/provinces.json \
        | ndjson-map '(delete d.properties, d)') \
  autonomous_regions=<( \
      cat es/autonomous_regions.json \
        | ndjson-map '(delete d.properties, d)') \
  nation=<( \
      cat es/nation.json \
        | ndjson-map '(delete d.properties, d)') \
  | topoquantize $QU \
  > es/es_provinces.json

rm es/provinces.json es/autonomous_regions.json es/nation.json

topo2geo -n \
  < es/es_municipalities.json \
  municipalities=es/municipalities.json \
  provinces=es/provinces.json \
  autonomous_regions=es/autonomous_regions.json \
  nation=es/nation.json
  
geo2topo -n \
  municipalities=<( \
      cat es/municipalities.json \
        | ndjson-map '(delete d.properties, d)') \
  provinces=<( \
      cat es/provinces.json \
        | ndjson-map '(delete d.properties, d)') \
  autonomous_regions=<( \
      cat es/autonomous_regions.json \
        | ndjson-map '(delete d.properties, d)') \
  nation=<( \
      cat es/nation.json \
        | ndjson-map '(delete d.properties, d)') \
  | topoquantize $QU \
  > es/es_municipalities.json

rm es/municipalities.json es/provinces.json es/autonomous_regions.json es/nation.json
